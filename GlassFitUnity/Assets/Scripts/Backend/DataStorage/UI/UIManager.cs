using UnityEngine;using System.Collections;using System;using System.Collections.Generic;using System.IO;using System.Runtime.Serialization.Formatters.Binary;[ExecuteInEditMode]public class UIManager : MonoBehaviour {	private string screenName;	    void OnGui()	{		GUILayout.BeginHorizontal();			GUILayout.Label("Screen name");					GUILayout.TextField(screenName);		GUILayout.EndHorizontal();				//allow to save only if data storage is initialized and blob received		if ( DataStorage.GetCoreStorage() == null)		{			GUI.enabled = false;		}		else		{			GUI.enabled = true;		}				if (GUILayout.Button("Save"))		{						}				GUI.enabled = true;	}		void SaveScene(string name)	{        SerializedNode node;        node = ProcessBranch(gameObject);			}		SerializedNode ProcessBranch(GameObject go)    {        SerializedNode structureParent = new SerializedNode(go);        foreach (Transform child in go.transform)        {            //check if child subbranch should be processed            UISerializable script = child.gameObject.GetComponent<UISerializable>();                        //if script is null then we will check if any child have this script.            script = script != null? script : child.gameObject.GetComponentInChildren<UISerializable>();                        if (script)            {                structureParent.subBranches.Add(ProcessBranch(child.gameObject));            }                    }        return structureParent;    }}